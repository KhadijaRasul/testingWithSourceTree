{
	"info": {
		"_postman_id": "ec8ff98d-7833-4272-8f8b-20c7b2461bdb",
		"name": "Equipment_List",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Unnecessary",
			"item": [
				{
					"name": "obsolute equipment",
					"item": [
						{
							"name": "get equipment list status for tenantid=1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 404\", function() {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : Not Found\", function() {",
											"    pm.response.to.have.status(\"Not Found\");",
											"});",
											"",
											"",
											"pm.test(\"Error message: No data found for tenant\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"No data found for tenant\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											"pm.request.headers.upsert({key:'Fiix-Tenant-Id',value:'1'})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Fiix-Tenant-Id",
										"value": "20",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?{{pageNumber}}&{{pageSize}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "{{pageNumber}}",
											"value": null
										},
										{
											"key": "{{pageSize}}",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "JUST_FOR_SourceTreeTest_get equipment list status for tenantid=1 Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 404\", function() {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : Not Found\", function() {",
											"    pm.response.to.have.status(\"Not Found\");",
											"});",
											"",
											"",
											"pm.test(\"Error message: No data found for tenant\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"No data found for tenant\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											"pm.request.headers.upsert({key:'Fiix-Tenant-Id',value:'1'})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Fiix-Tenant-Id",
										"value": "20",
										"type": "text",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?{{pageNumber}}&{{pageSize}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "{{pageNumber}}",
											"value": null
										},
										{
											"key": "{{pageSize}}",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "check total no. of record",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "76028e95-8c05-4df5-afc8-85f908e1a79f",
										"exec": [
											"pm.test(\"Check if all the fields exist\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"",
											"        pm.test(\"total no. of records : 50\", function() {",
											"            pm.expect(jsonResponse.totalElements).to.eql(50);",
											"        });",
											"    }",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fiix-Tenant-Id",
										"value": "20",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?{{pageNumber}}&{{pageSize}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "{{pageNumber}}",
											"value": null
										},
										{
											"key": "{{pageSize}}",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get match content for first and last record",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "aae64c49-a97c-483d-b161-02f05b30400b",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"50\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "40ca6e0b-8703-4a58-acee-10b562a5b5e6",
										"exec": [
											"pm.test(\"Check if content matches with database\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        var lastIndex=jsonResponse.items.length-1;",
											"        ",
											"        pm.test(\"Equipment name 1st and last\", function () {",
											"        pm.expect(jsonResponse.items[0].code).to.eql(\"AMET-DCD01\");",
											"        pm.expect(jsonResponse.items[lastIndex].code).to.eql(\"VEH-303\");",
											"});",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fiix-Tenant-Id",
										"value": "20",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Needs help!!!!check  every column exists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "30af8985-92ca-4059-a0d3-6ada96545922",
										"exec": [
											"pm.test(\"Needs help: Check if all 10 basic fields exist\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"       var jsonResponse = pm.response.json();",
											"       var counter=0;",
											"       var index=0;",
											"        while(counter===0 && index <jsonResponse.items.length){",
											"       ",
											"            ",
											"            ",
											"           ",
											"         if(",
											"            jsonResponse.items[index].code!==null &&",
											"          jsonResponse.items[index].name!==null &&",
											"          jsonResponse.items[index].serialNumber!==null &&",
											"          jsonResponse.items[index].barcode!==null &&",
											"          jsonResponse.items[index].make!==null &&",
											"          jsonResponse.items[index].category!==null &&",
											"          jsonResponse.items[index].state!==null &&",
											"          jsonResponse.items[index].category!==null",
											"          ){",
											"              counter=1;",
											"          }",
											"          ",
											"          if(counter===0){",
											"            index++;",
											"          }",
											"            ",
											"        }",
											"        ",
											"        console.log(\"counter is \"+counter+ \"index is\"+ index );",
											"    if(counter>0){",
											"        console.log(\"here index is\"+index)",
											"       pm.expect(jsonResponse.items[index]).to.have.property('id');",
											"        pm.expect(jsonResponse.items[index].id).to.be.a('string');",
											"        console.log(\"id is done\");",
											"        ",
											"        ",
											"       pm.expect(jsonResponse.items[index]).to.have.property('code');",
											"        pm.expect(jsonResponse.items[index].code).to.be.a('string');",
											"        console.log(\"code is done\");",
											"        ",
											"       pm.expect(jsonResponse.items[index]).to.have.property('name');",
											"        pm.expect(jsonResponse.items[index].name).to.be.a('string');",
											"        console.log(\"name is done\");",
											"        ",
											"       pm.expect(jsonResponse.items[index]).to.have.property('barcode');",
											"        pm.expect(jsonResponse.items[index].barcode).to.be.a('string');",
											"        console.log(\"barcode is done\");",
											"       ",
											"        pm.expect(jsonResponse.items[index]).to.have.property('make');",
											"        pm.expect(jsonResponse.items[index].make).to.be.a('string');",
											"        ",
											"        pm.expect(jsonResponse.items[index]).to.have.property('state');pm.expect(jsonResponse.items[index].state).to.be.a('boolean');",
											"        ",
											"        pm.expect(jsonResponse.items[index]).to.have.property('createdAt');",
											"        pm.expect(jsonResponse.items[index].createdAt).to.be.a('string');",
											"        ",
											"        ",
											"        ",
											"        pm.expect(jsonResponse.items[index]).to.have.property('category');",
											"        pm.expect(jsonResponse.items[index].category.name).to.be.a('string');",
											"        console.log(\"I am working\")",
											"        ",
											"        ",
											"        pm.expect(jsonResponse.items[index]).to.have.property('serialNumber');",
											"        pm.expect(jsonResponse.items[index].serialNumber).to.be.a('string');",
											"        ",
											"       ",
											"        ",
											"        ",
											"    }",
											"       ",
											"    }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2bc66c7d-7e96-40b5-aa46-4555097d5651",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fiix-Tenant-Id",
										"value": "20",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "redundant Equipment validity check",
					"item": [
						{
							"name": "Code is not alphanumeric",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Status code name has string : error message\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"Bad Request\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"apiEquipmentFeb18\",\n  \"code\": 123,\n  \"description\": \"testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Name is not alphanumeric",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Status code name has string : error message\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"Bad Request\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": true,\n  \"code\": \"apiCodeFeb18\",\n  \"description\": \"testing post from postman_name is boolean\",\n  \"criticality\": 7,\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Description is not alphanumeric",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Status code name has string : error message\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"Bad Request\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"apiEquipmentFeb18\",\n  \"code\": \"apiCodeFeb18\",\n  \"description\": 123,\n  \"criticality\": 7,\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "barcode is not alphanumeric",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Status code name has string : error message\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"Bad Request\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": true,\n  \"code\": \"apiCodeFeb18\",\n  \"description\": \"testing post from postman_name is boolean\",\n  \"criticality\": 7,\n  \"barcode\": false,\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "UNSPC is not alphanumeric",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Status code name has string : error message\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"Bad Request\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": true,\n  \"code\": \"apiCodeFeb18\",\n  \"description\": \"testing post from postman_name is boolean\",\n  \"criticality\": 7,\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Make is not alphanumeric",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Status code name has string : error message\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"Bad Request\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": true,\n  \"code\": \"apiCodeFeb18\",\n  \"description\": \"testing post from postman_name is boolean\",\n  \"criticality\": 7,\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": true,\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Model is not alphanumeric",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Status code name has string : error message\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"Bad Request\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": true,\n  \"code\": \"apiCodeFeb18\",\n  \"description\": \"testing post from postman_name is boolean\",\n  \"criticality\": 7,\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": 12345,\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Note is not alphanumeric",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Status code name has string : error message\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"Bad Request\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": true,\n  \"code\": \"apiCodeFeb18\",\n  \"description\": \"testing post from postman_name is boolean\",\n  \"criticality\": 7,\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Serial no. is not alphanumeric",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Status code name has string : error message\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"Bad Request\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": true,\n  \"code\": \"apiCodeFeb18\",\n  \"description\": \"testing post from postman_name is boolean\",\n  \"criticality\": 7,\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": 1234,\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Incorrect post with nonexisting ChargeDept",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56eedea6-c419-47c6-96a3-8d346d5414ad",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Status code name has string : error message\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"Bad Request\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"JustNowMar9EquipmentWithAccount\",\n  \"code\": \"ChargedDept does not exists equipCodeMar9\",\n  \"description\": \"note: testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n   \"chargeDepartmentId\":{{chargedeptID}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Incorrect post with nonexistingAccount",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status code name has string : Created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"JustNowMar9EquipmentWithAccount\",\n  \"code\": \"equipCodeMar9\",\n  \"description\": \"note: testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n  \"accountId\": {{accountId}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "EquipmentList General",
			"item": [
				{
					"name": "GET EquipmentList",
					"item": [
						{
							"name": "get an equipment using code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is: OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Fiix-Tenant-Id",
										"value": "20",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&code={{equipmentCode}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "code",
											"value": "{{equipmentCode}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get full equipment list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is: OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20"
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get equipment list with invalid page number",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"pm.test(\"Resetting page number to 1\", function() {",
											" pm.globals.set(\"pageNumberE\", 1);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"-2\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text",
										"disabled": true
									},
									{
										"key": "Fiix-Tenant-Id",
										"value": "20",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get pagination for pageSize 10",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6344bb15-f402-46f9-94c0-0ee0ef0dc8c8",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"10\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "de6ef2c5-900b-4ae8-a92b-e3392b4423df",
										"exec": [
											"pm.test(\" page size: 10\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        var itemsPerPage=jsonResponse.items.length",
											"        pm.expect(itemsPerPage).to.eql(jsonResponse.pageSize);",
											"",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get pagination for pageSize 25",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "88580971-8f33-4ef5-9ae5-f8e47e4a1972",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"25\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "73cc24f9-8aca-4fc6-947c-499a3eecbbdd",
										"exec": [
											"pm.test(\" page size: 25\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        var itemsPerPage=jsonResponse.items.length",
											"        pm.expect(itemsPerPage).to.eql(jsonResponse.pageSize);",
											"",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get pagination for pageSize 50",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4fc19e1-cc7b-40d3-bd39-464d8407e951",
										"exec": [
											"pm.test(\" page size: 50\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        var itemsPerPage=jsonResponse.items.length",
											"        pm.expect(itemsPerPage).to.eql(jsonResponse.pageSize);",
											"",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ccd4c5a8-50e1-4c66-993b-3bb50f113558",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"50\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get exceeding page limit",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d14f95ef-1dbf-4aa3-814a-de5d1ac3584e",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"10\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "95bc4582-4687-4665-8782-ff8eb65636e9",
										"exec": [
											"pm.test(\"Check if content matches with database\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        var noOfItem=jsonResponse.items.length;",
											"        ",
											"        pm.expect(noOfItem).to.eql(0);",
											"",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST Equipment List",
					"item": [
						{
							"name": "script to find and set values of code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"",
											"pm.test(\"save values in global variable\", function () {",
											"    var jsonData = pm.response.json();",
											"    var index=_.random(0, (jsonData.items.length-1))",
											"     console.log(index)",
											"    var codeValue=jsonData.items[index].code;",
											"     pm.globals.set(\"equipmentCode\", codeValue);",
											"    ",
											"}); ",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct post with basic field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status is: Created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6786690e-2ba7-4a58-8785-e973e1bdb40e",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"apiEquipmentName\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"AB12345678910\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"39101619\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct post with linked fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status is: Created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6786690e-2ba7-4a58-8785-e973e1bdb40e",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"apiEquipmentName\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"AB12345678910\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"39101619\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\",\n  \"accountId\": {{accountId}},\n  \"chargeDepartmentId\":{{chargedeptID}},\n  \"categoryId\":\"{{categoryId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "empty tag",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "61d26af5-8205-42b3-87f4-a955860453b0",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Status is: bad request\", function() {",
											"    pm.response.to.have.status(\"Bad Request\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "c614a062-3ba3-480d-89c2-da152f58b727",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "error message: missing mandatory field",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f31a3774-bfb2-49fd-8240-bec909ee7d0a",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Mandatory fields missing\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"is mandatory\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"string\",\n  \"unspscCode\": \"stringoTestInsteadOfNo\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "non-exiting Account, chargedDept and categpry",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Non Existing linked fields\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"does not exist\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b0bc260b-f320-49d8-817d-05186159cf10",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"JustNowMarch16EquipmentWithAccount\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"note: testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n  \"accountId\": 1009,\n  \"chargeDepartmentId\":50,\n  \"categoryId\":\"43834691-d495-4eef-a5bc-5f300d037ec2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Search Equipment",
					"item": [
						{
							"name": "script to find and set values",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"",
											"pm.test(\"Setup: saving values in global variable\", function () {",
											"    var jsonData = pm.response.json();",
											"    var index=_.random(0, (jsonData.items.length-1))",
											"    ",
											"    var nameValue=jsonData.items[index].name;",
											"    var codeValue=jsonData.items[index].code;",
											"    var serialNValue=jsonData.items[index].serialNumber;",
											"    var manufactureValue=jsonData.items[index].make;",
											"    var barcodeValue=jsonData.items[index].barcode;",
											"     ",
											"     pm.globals.set(\"nameEquipment\", nameValue);",
											"     pm.globals.set(\"equipmentCode\", codeValue);",
											"     pm.globals.set(\"manufactureEquipment\",manufactureValue); ",
											"     pm.globals.set(\"serialNoEquipment\",serialNValue); ",
											"     pm.globals.set(\"barcodeEquipment\",barcodeValue);",
											"      ",
											"     var categoryExists = _.get(jsonData, 'items[index].category');",
											"            if(categoryExists) {",
											"                var categoryNameValue=jsonData.items[index].category.name;",
											"                pm.globals.set(\"CategoryNameUnique\",categoryNameValue);",
											"            }",
											"     ",
											"    ",
											"    ",
											"}); ",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get equipment with an existing name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Exiting name exact search: total no. of record is more  than 0\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.above(0);",
											"    ",
											"    pm.globals.set(\"NoOfEquipmentFound\", totalRecord);",
											"    ",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0cd6c14a-61ad-4b45-85ed-a72d0ed128bc",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{nameEquipment}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{nameEquipment}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get equipment with an existing name uppercase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"upper case existing name search: total no. of record =existing record, nothing changed\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.equal(pm.globals.get(\"NoOfEquipmentFound\"));",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e4babafc-83b8-4076-9509-3b4ccecdf99e",
										"exec": [
											"let stringUpper = pm.globals.get(\"nameEquipment\").toUpperCase();",
											"pm.globals.set(\"nameEquipment\", stringUpper);",
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?{{sortBy}}&pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{nameEquipment}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "{{sortBy}}",
											"value": null
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{nameEquipment}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get equipment with an existing name lowercase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is: OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"lower case exiting name search: total no. of record =existing record, nothing changed\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.equal(pm.globals.get(\"NoOfEquipmentFound\"));",
											"}); ",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e4babafc-83b8-4076-9509-3b4ccecdf99e",
										"exec": [
											"let stringLower = pm.globals.get(\"nameEquipment\").toLowerCase();",
											"pm.globals.set(\"nameEquipment\", stringLower);",
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?{{sortBy}}&pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{nameEquipment}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "{{sortBy}}",
											"value": null
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{nameEquipment}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get equipment with substring (name variable) search",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is: OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Substring of existing name search: total no. of substring record is more or equal to actual found\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.at.least(pm.globals.get(\"NoOfEquipmentFound\"));",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fcd2ded5-636f-4919-a7b3-2a3c9a83681e",
										"exec": [
											"let maximumIndexNo=pm.globals.get(\"nameEquipment\").length;",
											"let randomLastIndexNo=_.random(1, maximumIndexNo);",
											"let subStringForEquipment= pm.globals.get(\"nameEquipment\").substr(0,randomLastIndexNo);",
											"pm.globals.set(\"nameE\", subStringForEquipment);",
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{nameEquipment}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{nameEquipment}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get equipment with blank (name variable)  search",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Blank name search: Result is total no. of record\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    var totalItems=jsonData.items.length;",
											"    pm.expect(totalRecord).to.eql(totalItems);",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fcd2ded5-636f-4919-a7b3-2a3c9a83681e",
										"exec": [
											"pm.globals.set(\"nameEquipment\", \"\");",
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{nameEquipment}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{nameEquipment}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get equipment with an existing code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status cis : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search by exiting code: total no. of record found is more  than 0\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.above(0);",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bad0420e-4f8f-4e04-9b85-021f9f2bb3c8",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}&q={{equipmentCode}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "q",
											"value": "{{equipmentCode}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get equipment with an existing category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search by existing Category: total no. of record found is more  than 0\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.above(0);",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0c47aac6-4b3c-4f2b-89fa-23dac58b8ed8",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}&q={{CategoryNameUnique}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "q",
											"value": "{{CategoryNameUnique}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get equipment with an existing manufacturer",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search by existing  make: total no. of record is more  than 0\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.above(0);",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "009a2b64-32ff-401b-b75f-137ddaf4331b",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}&q={{manufactureEquipment}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "q",
											"value": "{{manufactureEquipment}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get equipment with an existing serial no.",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search by exiting serial no: total no. of record is more  than 0\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.above(0);",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e6020ed2-32f4-44af-bc93-ba911fc30990",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}&q={{serialNoEquipment}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "q",
											"value": "{{serialNoEquipment}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get equipment with an existing barcode",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search by exiting barcode: total no. of record is more  than 0\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.above(0);",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ad8a4a1c-29bc-4b20-a6b7-e93949a2cc66",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}&q={{barcodeEquipment}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "q",
											"value": "{{barcodeEquipment}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get equipment with a non-existing name",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8a06537e-be0c-41bd-bdda-f5d35452223f",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"nameEquipment\")+stringDate;",
											"pm.globals.set(\"nameEquipment\", concatString);",
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8d5e558c-be6f-43f6-bcb6-71e9592687da",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is: OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"",
											"pm.test(\"Search by nonexiting name: total no. of record is 0\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.eql(0);",
											"",
											"}); ",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}&q={{nameEquipment}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "q",
											"value": "{{nameEquipment}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "Post Account",
					"item": [
						{
							"name": "Create Equipment with Accounts",
							"item": [
								{
									"name": "script to find and set values of equipment code",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
												"exec": [
													"pm.test(\"Status code is 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Status is : OK\", function() {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"",
													"",
													"pm.test(\"save values in global variable\", function () {",
													"    var jsonData = pm.response.json();",
													"    var index=_.random(0, (jsonData.items.length-1))",
													"     console.log(index)",
													"    var codeValue=jsonData.items[index].code;",
													"     pm.globals.set(\"equipmentCode\", codeValue);",
													"    ",
													"}); ",
													"",
													"",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
												"exec": [
													"pm.globals.set(\"pageNumberE\", \"1\");",
													"pm.globals.set(\"pageSizeE\", \"1000\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}",
											"protocol": "https",
											"host": [
												"equipment-mgmt-service",
												"fiixcmms-ball",
												"com"
											],
											"path": [
												"equipments"
											],
											"query": [
												{
													"key": "pageSize",
													"value": "{{pageSizeE}}"
												},
												{
													"key": "pageNumber",
													"value": "{{pageNumberE}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "script to find and set account id (dynamic)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
												"exec": [
													"pm.test(\"Status code is 200\", function() {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Status code name has string : OK\", function() {",
													"    pm.response.to.have.status(\"OK\");",
													"});",
													"",
													"pm.test(\"save id in AccountId\", function () {",
													"    var jsonData = pm.response.json();",
													"    var index=_.random(1, (jsonData.items.length-1))",
													"    var accountIdValue=JSON.parse(jsonData.items[index].id);",
													"   pm.globals.set(\"accountId\", accountIdValue);",
													"    ",
													"}); ",
													"",
													"",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
												"exec": [
													"pm.globals.set(\"pageNumberE\", \"1\");",
													"pm.globals.set(\"pageSizeE\", \"1000\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json",
												"disabled": true
											},
											{
												"key": "Fiix-Tenant-Id",
												"type": "text",
												"value": "20"
											}
										],
										"url": {
											"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&sortBy=code",
											"protocol": "https",
											"host": [
												"equipment-mgmt-service",
												"fiixcmms-ball",
												"com"
											],
											"path": [
												"accounts"
											],
											"query": [
												{
													"key": "pageSize",
													"value": "{{pageSizeE}}"
												},
												{
													"key": "pageNumber",
													"value": "{{pageNumberE}}"
												},
												{
													"key": "sortBy",
													"value": "code"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Correct equipm. post with account info",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"pm.test(\"Status is: Created\", function() {",
													"    pm.response.to.have.status(\"Created\");",
													"});",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4e20923f-c958-47a7-99d0-d34a4eea702a",
												"exec": [
													"const dateNow= new Date();",
													"let stringDate= dateNow.toISOString();",
													"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
													"pm.globals.set(\"equipmentCode\", concatString);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \" EquipmentWithAccount\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"note: testing post from postman on account creation\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n  \"accountId\": {{accountId}}\n  \n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
											"protocol": "https",
											"host": [
												"equipment-mgmt-service",
												"fiixcmms-ball",
												"com"
											],
											"path": [
												"equipments"
											]
										}
									},
									"response": []
								},
								{
									"name": "incorrrect equipment post wrong account data type",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f31a3774-bfb2-49fd-8240-bec909ee7d0a",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Status code name has string : error message\", function() {",
													"    pm.expect(pm.response.text()).to.include(\"Bad Request\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "45a614ee-9168-4184-be1c-8222d9bd05cf",
												"exec": [
													"const dateNow= new Date();",
													"let stringDate= dateNow.toISOString();",
													"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
													"pm.globals.set(\"equipmentCode\", concatString);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"Mar9Name\",\n  \"code\": \"{{equipmentCode}}}\",\n  \"availability\": false,\n  \"accountId\": \"stringoTestInsteadOfNo\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
											"protocol": "https",
											"host": [
												"equipment-mgmt-service",
												"fiixcmms-ball",
												"com"
											],
											"path": [
												"equipments"
											]
										}
									},
									"response": []
								},
								{
									"name": "non-exiting Account",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Status is: does not exist\", function() {",
													"    pm.expect(pm.response.text()).to.include(\"Account does not exist\");",
													"});",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6ff0010c-eba4-4c99-9726-cdd0093de733",
												"exec": [
													"const dateNow= new Date();",
													"let stringDate= dateNow.toISOString();",
													"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
													"pm.globals.set(\"equipmentCode\", concatString);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"JustNowMarch16EquipmentWithAccount\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"note: testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n  \"accountId\": 1009,\n  \"chargeDepartmentId\":{{chargedeptID}},\n  \"categoryId\":\"{{categoryId}}\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
											"protocol": "https",
											"host": [
												"equipment-mgmt-service",
												"fiixcmms-ball",
												"com"
											],
											"path": [
												"equipments"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Get Account",
					"item": [
						{
							"name": "get account list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20"
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "check  every column exists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "30af8985-92ca-4059-a0d3-6ada96545922",
										"exec": [
											"pm.test(\"Check if 3 basic fields exist\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        ",
											"         pm.expect(jsonResponse.items[0]).to.have.property('id');",
											"        pm.expect(jsonResponse.items[0].id).to.be.a('number');",
											"",
											"        pm.expect(jsonResponse.items[0]).to.have.property('code');",
											"        pm.expect(jsonResponse.items[0].code).to.be.a('string');",
											"        ",
											"        pm.expect(jsonResponse.items[0]).to.have.property('name');",
											"        pm.expect(jsonResponse.items[0].name).to.be.a('string');",
											"        ",
											"       ",
											"        ",
											"        ",
											"       ",
											"    }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "3bb96a81-961b-43ba-8cbf-176fc629555b",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get Total no. of record",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "76028e95-8c05-4df5-afc8-85f908e1a79f",
										"exec": [
											"pm.test(\"Check if all the fields exist\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        var itemsPerPage=jsonResponse.items.length",
											"",
											"        pm.test(\"total no. of records : Maximum record no.\", function() {",
											"            pm.expect(jsonResponse.totalElements).to.eql(itemsPerPage);",
											"        });",
											"    }",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bebee2f7-20d7-4c8d-acc2-e7169086ce58",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts??pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "?pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Match account name 1st and last: needs to  updated in future",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "aae64c49-a97c-483d-b161-02f05b30400b",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "40ca6e0b-8703-4a58-acee-10b562a5b5e6",
										"exec": [
											"pm.test(\"Check if content matches with database\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        var lastIndex=jsonResponse.items.length-1;",
											"        ",
											"        pm.test(\"Account 1st code and 50th code matching\", function () {",
											"        pm.expect(jsonResponse.items[0].code).to.eql(\"101\");",
											"        pm.expect(jsonResponse.items[lastIndex].code).to.eql(\"774\");",
											"});",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get exceeding page limit",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d14f95ef-1dbf-4aa3-814a-de5d1ac3584e",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"2\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "95bc4582-4687-4665-8782-ff8eb65636e9",
										"exec": [
											"pm.test(\"Check if content matches with database\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        var noOfItem=jsonResponse.items.length;",
											"        ",
											"        pm.expect(noOfItem).to.eql(0);",
											"",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid pagination for pageSize -1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6344bb15-f402-46f9-94c0-0ee0ef0dc8c8",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"-1\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "de6ef2c5-900b-4ae8-a92b-e3392b4423df",
										"exec": [
											"pm.test(\" when page size: -1, default page size 10 kicks in\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        var itemsPerPage=jsonResponse.items.length",
											"        pm.expect(itemsPerPage).to.eql(10);",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "invalid pagination for pageNo -1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6344bb15-f402-46f9-94c0-0ee0ef0dc8c8",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"-1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "de6ef2c5-900b-4ae8-a92b-e3392b4423df",
										"exec": [
											"pm.test(\" when page number: -1,default page number  kicks in\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        var itemsPerPage=jsonResponse.pageNumber",
											"        pm.expect(itemsPerPage).to.eql(1);",
											"",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get pagination for pageSize 10",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6344bb15-f402-46f9-94c0-0ee0ef0dc8c8",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"10\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "de6ef2c5-900b-4ae8-a92b-e3392b4423df",
										"exec": [
											"pm.test(\" page size: 10\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        //converting string to integer",
											"        var totalRecordsInOnePage=+pm.globals.get(\"pageSizeE\");",
											"        var itemsPerPage=jsonResponse.items.length",
											"        pm.expect(itemsPerPage).to.eql(totalRecordsInOnePage);",
											"",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get pagination for pageSize 99",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4fc19e1-cc7b-40d3-bd39-464d8407e951",
										"exec": [
											"pm.test(\" page size: 99\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        //converting string to integer",
											"        var totalRecordsInOnePage=+pm.globals.get(\"pageSizeE\");",
											"        var itemsPerPage=jsonResponse.items.length",
											"        pm.expect(itemsPerPage).to.eql(totalRecordsInOnePage);",
											"",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ccd4c5a8-50e1-4c66-993b-3bb50f113558",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"99\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "obsolute account test",
					"item": [
						{
							"name": "get pagination for pageSize 50",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "88580971-8f33-4ef5-9ae5-f8e47e4a1972",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"50\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "73cc24f9-8aca-4fc6-947c-499a3eecbbdd",
										"exec": [
											"pm.test(\" page size: 50\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        //converting string to integer",
											"        var totalRecordsInOnePage=+pm.globals.get(\"pageSizeE\");",
											"        var itemsPerPage=jsonResponse.items.length",
											"        pm.expect(itemsPerPage).to.eql(totalRecordsInOnePage);",
											"",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Search Account",
					"item": [
						{
							"name": "script to find and set values for Account",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"",
											"pm.test(\"save values in global variable\", function () {",
											"    var jsonData = pm.response.json();",
											"    var index=_.random(0, (jsonData.items.length-1));",
											"",
											"    var nameValue=jsonData.items[index].name;",
											"    var codeValue=jsonData.items[index].code;",
											"     ",
											"    pm.globals.set(\"nameAccount\", nameValue);",
											"    pm.globals.set(\"codeAccount\", codeValue);",
											"",
											"     ",
											"     ",
											"    ",
											"    ",
											"}); ",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?{{sortBy}}&pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "{{sortBy}}",
											"value": null
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get account with an existing name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is: OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search with exiting account name: total no. of record is more  than 0\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.above(0);",
											"    pm.globals.set(\"NoOfAccountsFound\", totalRecord);",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "59544ebe-deef-4374-8429-b2e3ea396dda",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{nameAccount}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{nameAccount}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get account with an existing name uppercase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is: OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search exiting account name with  upper case: total no. of record is equal to exiting value\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.equal(pm.globals.get(\"NoOfAccountsFound\"));",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e4babafc-83b8-4076-9509-3b4ccecdf99e",
										"exec": [
											"let nameToUpperCase = pm.globals.get(\"nameAccount\").toUpperCase();",
											"pm.globals.set(\"nameAccount\", nameToUpperCase );",
											"",
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{nameAccount}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{nameAccount}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get account with an existing name lowercase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is: OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search by exiting account name lowercase: total no. of record is same as exiting value\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.equal(pm.globals.get(\"NoOfAccountsFound\"));",
											"}); ",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e4babafc-83b8-4076-9509-3b4ccecdf99e",
										"exec": [
											"let nameLowerCase = pm.globals.get(\"nameAccount\").toLowerCase();",
											"pm.globals.set(\"nameAccount\", nameLowerCase);",
											"",
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{nameAccount}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{nameAccount}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get account with substring (name variable) search",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search with substring of account exiting name: total no. of substring record is equal or more  than actual record\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.at.least(pm.globals.get(\"NoOfAccountsFound\"));",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fcd2ded5-636f-4919-a7b3-2a3c9a83681e",
										"exec": [
											"let maximumIndexNo=pm.globals.get(\"nameAccount\").length;",
											"let randomLastIndexNo=_.random(1, maximumIndexNo);",
											"",
											"let subStringForAccount= pm.globals.get(\"nameAccount\").substr(0,randomLastIndexNo);",
											"",
											"pm.globals.set(\"nameAccount\", subStringForAccount);",
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{nameAccount}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{nameAccount}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get account  with blank (name variable)  search",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is: OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search with blank account name: total no.  result=all records\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    var totalItems=jsonData.items.length;",
											"    pm.expect(totalRecord).to.eql(totalItems);",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fcd2ded5-636f-4919-a7b3-2a3c9a83681e",
										"exec": [
											"pm.globals.set(\"nameAccount\", \"\");",
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{nameAccount}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{nameAccount}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get account with an existing code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search with exiting account code: total no. of record is more  than 0\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.above(0);",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "856715f7-ee43-4609-b1bb-e88440573410",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/accounts?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}&q={{codeAccount}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"accounts"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "q",
											"value": "{{codeAccount}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Charged Dept.",
			"item": [
				{
					"name": "GET Charged Dept",
					"item": [
						{
							"name": "get charge dept list status check",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20"
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									]
								}
							},
							"response": []
						},
						{
							"name": "get charge dept/ visible elements exists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d593ef1-2ac3-4cec-9c3d-4d3ac365c29d",
										"exec": [
											"pm.test(\"Check if all 4  fields exist\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        ",
											"         pm.expect(jsonResponse.items[0]).to.have.property('id');",
											"        pm.expect(jsonResponse.items[0].id).to.be.a('number');",
											"",
											"        pm.expect(jsonResponse.items[0]).to.have.property('code');",
											"        pm.expect(jsonResponse.items[0].code).to.be.a('string');",
											"        ",
											"        pm.expect(jsonResponse.items[0]).to.have.property('description');",
											"        pm.expect(jsonResponse.items[0].description).to.be.a('string');",
											"        ",
											"         pm.expect(jsonResponse.items[0]).to.have.property('facilityDetails');",
											"        pm.expect(jsonResponse.items[0].facilityDetails).to.be.a('string');",
											"        ",
											"       ",
											"        ",
											"        ",
											"       ",
											"    }",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "580c1270-5f8a-42d7-b2d7-1a327b70b442",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get Total no. of record",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "76028e95-8c05-4df5-afc8-85f908e1a79f",
										"exec": [
											"pm.test(\"Check if all the fields exist\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        var itemsPerPage=jsonResponse.items.length",
											"",
											"        pm.test(\"total no. of records : Maximum record\", function() {",
											"            pm.expect(jsonResponse.totalElements).to.eql(itemsPerPage);",
											"        });",
											"    }",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "bebee2f7-20d7-4c8d-acc2-e7169086ce58",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Match account name 1st and last: need to update in future",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7566ea8e-a0c1-42be-a4cf-6b5e479adc83",
										"exec": [
											"pm.test(\"Check if content matches with database\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        var lastIndex=jsonResponse.items.length-1;",
											"        ",
											"        pm.test(\"Account 1st code and 50th code matching\", function () {",
											"        pm.expect(jsonResponse.items[0].code).to.eql(\"Code1\");",
											"        pm.expect(jsonResponse.items[lastIndex].code).to.eql(\"Code9\");",
											"});",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "d1787700-1880-49f8-b149-4eebd0ca8998",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}&sortBy=code",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "sortBy",
											"value": "code"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get exceeding page limit",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d14f95ef-1dbf-4aa3-814a-de5d1ac3584e",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"2\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "95bc4582-4687-4665-8782-ff8eb65636e9",
										"exec": [
											"pm.test(\"Checking beyond maximum record\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        var noOfItem=jsonResponse.items.length;",
											"        ",
											"        pm.expect(noOfItem).to.eql(0);",
											"",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get pagination for pageSize -1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6344bb15-f402-46f9-94c0-0ee0ef0dc8c8",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"-1\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "de6ef2c5-900b-4ae8-a92b-e3392b4423df",
										"exec": [
											"pm.test(\" when page size: -1, default page size kicks in\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        var itemsPerPage=jsonResponse.items.length",
											"        pm.expect(itemsPerPage).to.eql(10);",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get pagination for pageNo -1",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6344bb15-f402-46f9-94c0-0ee0ef0dc8c8",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"-1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "de6ef2c5-900b-4ae8-a92b-e3392b4423df",
										"exec": [
											"pm.test(\" when page number: -1, default page number kicks in\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        var itemsPerPage=jsonResponse.pageNumber",
											"        pm.expect(itemsPerPage).to.eql(1);",
											"",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get pagination for pageSize 10",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6344bb15-f402-46f9-94c0-0ee0ef0dc8c8",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"10\");",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "de6ef2c5-900b-4ae8-a92b-e3392b4423df",
										"exec": [
											"pm.test(\" page size: 10\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        //converting string to integer",
											"        var totalRecordsInOnePage=+pm.globals.get(\"pageSizeE\");",
											"        var itemsPerPage=jsonResponse.items.length",
											"        pm.expect(itemsPerPage).to.eql(totalRecordsInOnePage);",
											"",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get pagination for pageSize 99",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4fc19e1-cc7b-40d3-bd39-464d8407e951",
										"exec": [
											"pm.test(\" page size: all elements\", function() {",
											"    if(pm.response.to.have.status(\"OK\")){",
											"        var jsonResponse = pm.response.json();",
											"        //converting string to integer",
											"        var totalRecordsInOnePage=jsonResponse.totalElements;",
											"        var itemsPerPage=jsonResponse.items.length",
											"        pm.expect(itemsPerPage).to.eql(totalRecordsInOnePage);",
											"",
											"    ",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "ccd4c5a8-50e1-4c66-993b-3bb50f113558",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"99\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST Create Equipment with Charged dept",
					"item": [
						{
							"name": "script to find and set values of equipment code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"",
											"pm.test(\"save values in global variable\", function () {",
											"    var jsonData = pm.response.json();",
											"    var index=_.random(0, (jsonData.items.length-1))",
											"     console.log(index)",
											"    var codeValue=jsonData.items[index].code;",
											"     pm.globals.set(\"equipmentCode\", codeValue);",
											"    ",
											"}); ",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "script to find and set charge id (dynamic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "36911e80-effe-437b-afda-a03db4df694f",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"",
											"pm.test(\"save id in chargeDeptID\", function () {",
											"    var jsonData = pm.response.json();",
											"    var index=_.random(0, (jsonData.items.length-1))",
											"    var chargeDeptIdValue=JSON.parse(jsonData.items[index].id);",
											"   pm.globals.set(\"chargedeptID\", chargeDeptIdValue);",
											"    ",
											"}); ",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "cf632074-b2f7-41ff-ab14-bd64e2446ff8",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20"
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&sortBy=code",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "sortBy",
											"value": "code"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct equipment post with existing chargedDept info",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status is : Created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "56ced6b8-c186-413b-8a69-07aa9116e63b",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"16th march test at 11 am equipment with category id\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"note: testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n   \"chargeDepartmentId\":{{chargedeptID}}\n  \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct equipment post with exiting  acct and  existing chargedDept",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status is : Created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "2f79d424-035c-4f27-87c7-f865946d3c71",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"JustNowMar9EquipmentWithAccount\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"note: testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n  \"accountId\": {{accountId}},\n  \"chargeDepartmentId\":{{chargedeptID}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "equipment account error message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f31a3774-bfb2-49fd-8240-bec909ee7d0a",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Status is : error message\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"Bad Request\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e7691206-0bae-42fe-91f1-4bdccaa33ae7",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "file",
									"file": {},
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "non-exiting chargedDept",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Status is : Charge department does not exist\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"Charge department does not exist\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "90a1f898-104e-4467-ba65-73f24e3a5eac",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"JustNowMarch16EquipmentWithAccount\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"note: testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n  \"accountId\": {{accountId}},\n  \"chargeDepartmentId\":50,\n  \"categoryId\":\"{{categoryId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "obsolute charged dept",
					"item": [],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8809af51-7db7-4c50-a4b4-7199a5f713fb",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c7a93859-5820-456d-ad14-06850852c284",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Search Charged Department",
					"item": [
						{
							"name": "script to find and set values for charged dept",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"",
											"pm.test(\"save values in global variable\", function () {",
											"    var jsonData = pm.response.json();",
											"    var index=_.random(0, (jsonData.items.length-1))",
											"     console.log(index)",
											"   var codeValue=jsonData.items[index].code;",
											"    var descriptionValue=jsonData.items[index].description;",
											"    var facilityValue=jsonData.items[index].facilityDetails;",
											"  ",
											"     ",
											"     pm.globals.set(\"codeChargedDept\", codeValue);",
											"     pm.globals.set(\"descriptionChargedDept.\", descriptionValue);",
											"        pm.globals.set(\"facilityChargedDept\", facilityValue);",
											"",
											"     ",
											"     ",
											"    ",
											"    ",
											"}); ",
											"",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get charge dept. with an existing code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search by existing chrage dept. code: total no. of record is more  than 0\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.above(0);",
											"    pm.globals.set(\"NoOfChargeDeptFound\", totalRecord);",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7179c24a-131b-4bcb-8ebe-fad1c22fc2be",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{codeChargedDept}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{codeChargedDept}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get charge dept with an existing name uppercase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status cis: OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search by exiting charge dept code uppercase: total no. of record is equal to existing value\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.equal(pm.globals.get(\"NoOfChargeDeptFound\"));",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e4babafc-83b8-4076-9509-3b4ccecdf99e",
										"exec": [
											"let codeToUpperCase = pm.globals.get(\"codeChargedDept\").toUpperCase();",
											"pm.globals.set(\"codeChargedDept\", codeToUpperCase );",
											"",
											"",
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{codeChargedDept}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{codeChargedDept}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get charged deptt. with an existing name lowercase",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search by exiting charge dept. code lowecase: total no. of record is equal to existing value\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.equal(pm.globals.get(\"NoOfChargeDeptFound\"));",
											"",
											"}); ",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e4babafc-83b8-4076-9509-3b4ccecdf99e",
										"exec": [
											"",
											"let codeToLowerCase = pm.globals.get(\"codeChargedDept\").toLowerCase();",
											"pm.globals.set(\"codeChargedDept\", codeToLowerCase );",
											"console.log(\"lowerCase code is\"+codeToLowerCase );",
											"",
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{codeChargedDept}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{codeChargedDept}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get charge dept. with substring (code variable) search",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search by substring of existing charge dept. code: total no. of substring record is equal or more  than actual found\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.at.least(pm.globals.get(\"NoOfChargeDeptFound\"));",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fcd2ded5-636f-4919-a7b3-2a3c9a83681e",
										"exec": [
											"let maximumIndexNo=pm.globals.get(\"codeChargedDept\").length;",
											"let randomLastIndexNo=_.random(1, maximumIndexNo);",
											"",
											"let subStringForChargeDept= pm.globals.get(\"codeChargedDept\").substr(0,randomLastIndexNo);",
											"pm.globals.set(\"codeChargedDept\", subStringForChargeDept);",
											"",
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{codeChargedDept}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{codeChargedDept}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get account  with blank (name variable)  search",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search by blank code of charge dept: total no. record found is all record\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    var totalItems=jsonData.items.length;",
											"    pm.expect(totalRecord).to.eql(totalItems);",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "fcd2ded5-636f-4919-a7b3-2a3c9a83681e",
										"exec": [
											"pm.globals.set(\"codeChargedDept\", \"\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{nameV}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{nameV}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get charged dept. with an existing description",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search by exiting description of charged dept: total no. of record is more  than 0\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.above(0);",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "592f291d-ccc7-443d-b4a6-f7ce4c235dce",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{descriptionChargedDept.}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{descriptionChargedDept.}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get charged dept. with an existing facility",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"pm.test(\"Search by exiting charge deptment facility: total no. of record is more  than 0\", function () {",
											"    var jsonData = pm.response.json();",
											"    var totalRecord=jsonData.totalElements;",
											"    pm.expect(totalRecord).to.be.above(0);",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6595e661-c56a-4f14-a55f-eba89ac71221",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/charge-departments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{facilityChargedDept}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"charge-departments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "{{facilityChargedDept}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Create Equipment with category",
			"item": [
				{
					"name": "script to find and set category id (dynamic)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Status is: OK\", function() {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"",
									"pm.test(\"save id in categoryIdValue\", function () {",
									"    var jsonData = pm.response.json();",
									"    var index=_.random(0, (jsonData.items.length-1));",
									"    var categoryIdValue=jsonData.items[index].id;",
									"",
									"    pm.globals.set(\"categoryId\", categoryIdValue);",
									"    ",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									"    ",
									"}); ",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
								"exec": [
									"pm.globals.set(\"pageNumberE\", \"1\");",
									"pm.globals.set(\"pageSizeE\", \"1000\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Fiix-Tenant-Id",
								"type": "text",
								"value": "20"
							}
						],
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipment-categories?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipment-categories"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "{{pageSizeE}}"
								},
								{
									"key": "pageNumber",
									"value": "{{pageNumberE}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "script to find and set values of equipment code (dynamic)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Status is : OK\", function() {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"",
									"pm.test(\"save values in global variable\", function () {",
									"    var jsonData = pm.response.json();",
									"    var index=_.random(0, (jsonData.items.length-1))",
									"     console.log(index)",
									"    var codeValue=jsonData.items[index].code;",
									"     pm.globals.set(\"equipmentCode\", codeValue);",
									"    ",
									"}); ",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
								"exec": [
									"pm.globals.set(\"pageNumberE\", \"1\");",
									"pm.globals.set(\"pageSizeE\", \"1000\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "{{pageSizeE}}"
								},
								{
									"key": "pageNumber",
									"value": "{{pageNumberE}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Correct post with category id (dynamic)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code name has string : Created\", function() {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "452bed5f-f486-43bb-bf6c-704b84ba6b4e",
								"exec": [
									"const dateNow= new Date();",
									"let stringDate= dateNow.toISOString();",
									"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
									"pm.globals.set(\"equipmentCode\", concatString);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"equipmentfor testing manufacturer\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"note: testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"audi\",\n  \"serialNumber\": \"9788\",\n  \"model\": \"a3\",\n  \"notes\": \"1st postman test for POL-1\",\n  \"categoryId\":\"{{categoryId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Correct post with acct,chargedDept and Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status is : Created\", function() {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "d76531b7-3a23-4ff2-9094-092e653b5761",
								"exec": [
									"const dateNow= new Date();",
									"let stringDate= dateNow.toISOString();",
									"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
									"pm.globals.set(\"equipmentCode\", concatString);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"JustNowMarch16EquipmentWithAccount\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"note: testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n  \"accountId\": {{accountId}},\n  \"chargeDepartmentId\":{{chargedeptID}},\n  \"categoryId\":\"{{categoryId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "equipment category error message",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f31a3774-bfb2-49fd-8240-bec909ee7d0a",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status is: error message\", function() {",
									"    pm.expect(pm.response.text()).to.include(\"Bad Request\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4220c3df-bcd6-4181-b68b-9110c906df3a",
								"exec": [
									"const dateNow= new Date();",
									"let stringDate= dateNow.toISOString();",
									"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
									"pm.globals.set(\"equipmentCode\", concatString);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"Mar9Name\",\n  \"code\": \"{{equipmentCode}}\",\n  \"availability\": false,\n  \"categoryId\": \"invalid category id\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "non-exiting category",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Nonexiting category id:ecpecting error message\", function() {",
									"    pm.expect(pm.response.text()).to.include(\" does not exist\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2d755cca-2024-4ee4-9908-8e9db4a55fb7",
								"exec": [
									"const dateNow= new Date();",
									"let stringDate= dateNow.toISOString();",
									"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
									"pm.globals.set(\"equipmentCode\", concatString);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"JustNowMarch16EquipmentWithAccount\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"note: testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n  \"accountId\": {{accountId}},\n  \"chargeDepartmentId\":{{chargedeptID}},\n  \"categoryId\":\"43834691-d495-4eef-a5bc-5f300d037ec2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "validation when creating equipment",
			"item": [
				{
					"name": "script to find and set values of equipment code (dynamic)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Status is : OK\", function() {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"",
									"pm.test(\"save values in global variable\", function () {",
									"    var jsonData = pm.response.json();",
									"    var index=_.random(0, (jsonData.items.length-1))",
									"     console.log(index)",
									"    var codeValue=jsonData.items[index].code;",
									"     pm.globals.set(\"equipmentCode\", codeValue);",
									"    ",
									"}); ",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
								"exec": [
									"pm.globals.set(\"pageNumberE\", \"1\");",
									"pm.globals.set(\"pageSizeE\", \"1000\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "{{pageSizeE}}"
								},
								{
									"key": "pageNumber",
									"value": "{{pageNumberE}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid test: Code missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string : Bad Reequest\", function() {",
									"    pm.response.to.have.status(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Error message: Code is mandatory\", function() {",
									"    pm.expect(pm.response.text()).to.include(\"is mandatory\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"apiEquipmentFeb18_unspc_feb25\",\n  \"description\": \"testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"1234\",\n  \"unspscCode\": \"987_unspc\" ,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid test: Name missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string : Bad Reequest\", function() {",
									"    pm.response.to.have.status(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Error message: Name is mandatory\", function() {",
									"    pm.expect(pm.response.text()).to.include(\" is mandatory\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1b53c4b2-6098-4e5f-b5ed-9b68fb12cbf5",
								"exec": [
									"const dateNow= new Date();",
									"let stringDate= dateNow.toISOString();",
									"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
									"pm.globals.set(\"equipmentCode\", concatString);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid test: Name, Availability and Code missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1d53e0ca-e960-4288-887a-23d0fa2ca692",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string : Bad Reequest\", function() {",
									"    pm.response.to.have.status(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Error message: Name, Sattus and Code are madatory\", function() {",
									"    pm.expect(pm.response.text()).to.include(\"is mandatory\");",
									"   ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "78c751bf-4121-4205-8deb-293655ef7099",
								"exec": [
									"const dateNow= new Date();",
									"let stringDate= dateNow.toISOString();",
									"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
									"pm.globals.set(\"equipmentCode\", concatString);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"description\": \"testing post from postman_name and code missing\",\n  \"criticality\": 7,\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid test: Criticality is not number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string : Bad Reequest\", function() {",
									"    pm.response.to.have.status(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Error message: not a valid integer\", function() {",
									"    pm.expect(pm.response.text()).to.include(\"not a valid Integer value\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "61d1d787-d47d-4246-b7f7-5269f3bc189a",
								"exec": [
									"const dateNow= new Date();",
									"let stringDate= dateNow.toISOString();",
									"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
									"pm.globals.set(\"equipmentCode\", concatString);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"apiEquipmentFeb18\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman\",\n  \"criticality\":\"test_criticality\",\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "VALID test: Criticality is not a whole number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status is : Created\", function() {",
									"    pm.response.to.have.status(\"Created\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b084d13b-5827-4550-89d3-1487e9eecb71",
								"exec": [
									"const dateNow= new Date();",
									"let stringDate= dateNow.toISOString();",
									"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
									"pm.globals.set(\"equipmentCode\", concatString);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"apiEquipmentFeb18\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman\",\n  \"criticality\": 7.5,\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid test: Criticality is nonpositiive  number",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string : Bad Reequest\", function() {",
									"    pm.response.to.have.status(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Error message: Criticality must be in the range 1 to 10\", function() {",
									"    pm.expect(pm.response.text()).to.include(\"Criticality must be in the range 1 to 10\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2481b1db-3cd6-4d99-bcf3-ed1984018640",
								"exec": [
									"const dateNow= new Date();",
									"let stringDate= dateNow.toISOString();",
									"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
									"pm.globals.set(\"equipmentCode\", concatString);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"apiEquipmentFeb18\",\n    \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman\",\n  \"criticality\": -100,\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid test: Criticality is number  beyond range",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string : Bad Reequest\", function() {",
									"    pm.response.to.have.status(\"Bad Request\");",
									"});",
									"",
									"pm.test(\"Error message: Criticality must be in the range 1 to 10\", function() {",
									"    pm.expect(pm.response.text()).to.include(\"Criticality must be in the range 1 to 10\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "311b6923-96a8-4ac2-bab9-847486575135",
								"exec": [
									"const dateNow= new Date();",
									"let stringDate= dateNow.toISOString();",
									"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
									"pm.globals.set(\"equipmentCode\", concatString);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"apiEquipmentFeb18\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman\",\n  \"criticality\": 100,\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid test: Availability is not boolean",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string : error message\", function() {",
									"    pm.expect(pm.response.text()).to.include(\"Bad Request\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ee6619df-92a0-4de9-8aea-8d7a08f2315d",
								"exec": [
									"const dateNow= new Date();",
									"let stringDate= dateNow.toISOString();",
									"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
									"pm.globals.set(\"equipmentCode\", concatString);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": true,\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman_name is boolean\",\n  \"criticality\": 7,\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"availability\": \"off\",\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Invalid test: Availability missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status  : field is mandatory\", function() {",
									"    pm.expect(pm.response.text()).to.include(\"field is mandatory\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "c522f8c6-a7d2-4a50-be68-fcf08ce860d1",
								"exec": [
									"const dateNow= new Date();",
									"let stringDate= dateNow.toISOString();",
									"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
									"pm.globals.set(\"equipmentCode\", concatString);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": true,\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman_name is boolean\",\n  \"criticality\": 7,\n  \"barcode\": \"1234\",\n  \"unspscCode\": 123,\n  \"make\": \"ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0dff3254-40b4-42a6-86af-f737021b03d7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2d50780e-1605-4184-bae5-7b703399167f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "SortedList",
			"item": [
				{
					"name": "GET AND POST SortedList",
					"item": [
						{
							"name": "Correct post for sort with account, chrge dpt and category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status code name has string : Created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1b5019aa-69aa-4df4-80f1-3190efd8a73e",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"JustNowMarch16EquipmentWithAccount\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"note: testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n  \"accountId\": {{accountId}},\n  \"chargeDepartmentId\":{{chargedeptID}},\n  \"categoryId\":\"{{categoryId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct post with basic field when name is 1name1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status is: Created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6786690e-2ba7-4a58-8785-e973e1bdb40e",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"1name1\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"AB12345678910\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"39101619\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct post with basic field when name is 1Name1",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status is: Created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6786690e-2ba7-4a58-8785-e973e1bdb40e",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"1Name1\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"AB12345678910\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"39101619\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct post with basic field when name is 2name2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status is: Created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6786690e-2ba7-4a58-8785-e973e1bdb40e",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"2name2\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"AB12345678910\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"39101619\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct post with basic field when name is 2 Name2",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status is: Created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6786690e-2ba7-4a58-8785-e973e1bdb40e",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"2 Name2\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"AB12345678910\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"39101619\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct post with basic field when name is 3name3",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status is: Created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6786690e-2ba7-4a58-8785-e973e1bdb40e",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"3name3\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"AB12345678910\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"39101619\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct post with basic field when name is 30name 30",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status is: Created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6786690e-2ba7-4a58-8785-e973e1bdb40e",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"30name 30\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"AB12345678910\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"39101619\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct post with basic field when name is 10 Name10",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status is: Created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6786690e-2ba7-4a58-8785-e973e1bdb40e",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"10 Name10\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"AB12345678910\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"39101619\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct post with basic field when name is 20 name20",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status is: Created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6786690e-2ba7-4a58-8785-e973e1bdb40e",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"20 name20\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"AB12345678910\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"ford\",\n  \"serialNumber\": \"39101619\",\n  \"model\": \"focus\",\n  \"notes\": \"1st postman test for POL-44\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "Need help!!!get equipment with an for record \"name\" for sort",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "15cd96b1-16f2-4755-ad83-691b09355cc1",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											" pm.test(\"Name should be sorted\", function () {",
											"     //var _ = require('lodash');",
											"    var jsonResponse = pm.response.json();",
											"    var index=0;",
											"     var tempArray=[];",
											"    while(index <jsonResponse.items.length){",
											"        tempArray[index]=jsonResponse.items[index].name;",
											"        index++;",
											"   }",
											"    ",
											"    var expectedSortedOrder = tempArray.sort();",
											"    console.log(expectedSortedOrder );",
											"    ",
											"    var index2=0;",
											"    while(index2 <jsonResponse.items.length1){",
											"    pm.expect(jsonResponse.items[index2].name).to.eql(expectedSortedOrder[index2]);",
											"         index2++;",
											"    }",
											"   ",
											"    ",
											"",
											"}); ",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0cd6c14a-61ad-4b45-85ed-a72d0ed128bc",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q=name",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "q",
											"value": "name"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "obsolute for  sort",
					"item": [
						{
							"name": "get equipment list sorted",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20"
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?{{pageSize}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "{{pageSize}}",
											"value": null
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct post for sort with mandatory fields",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status code name has string : Created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"3Name2\",\n  \"code\": \"3_4\",\n  \"availability\": true,\n  \"description\": \"descriptionSorted\",\n  \"accountId\": {{accountId}},\n  \"chargeDepartmentId\":{{chargedeptID}},\n  \"categoryId\":\"{{categoryId}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Equipment with Unique ID",
			"item": [
				{
					"name": "GET Equipment with ID",
					"item": [
						{
							"name": "script to find and set equipment code (dynamic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"pm.test(\"save id in equipmentID\", function () {",
											"    var jsonData = pm.response.json();",
											"    var index=_.random(1, (jsonData.items.length-1))",
											"    var equipmentCodeValue=jsonData.items[index].code;",
											"     pm.globals.set(\"equipmentCode\", equipmentCodeValue);",
											"",
											"    ",
											"}); ",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20"
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get equipment with code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status is : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20"
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}&code={{equipmentCode}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "code",
											"value": "{{equipmentCode}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get negative test: equipment with wrong code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"",
											"",
											"pm.test(\"check that list is empty\",function(){",
											"        var jsonData = pm.response.json();",
											"         pm.expect(jsonData.totalElements).to.eql(0);",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"31\");",
											"let concatString = pm.globals.get(\"equipmentCode\")+\"wrong\";",
											"pm.globals.set(\"equipmentCode\", concatString);",
											"",
											"",
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20"
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}&code={{equipmentCode}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										},
										{
											"key": "code",
											"value": "{{equipmentCode}}"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "POST Create Equipment with unique id",
					"item": [
						{
							"name": "script to find and set code (dynamic)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fed6772e-1212-4a0c-a8ea-64e81d9a4402",
										"exec": [
											"pm.test(\"Status code is 200\", function() {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Status code name has string : OK\", function() {",
											"    pm.response.to.have.status(\"OK\");",
											"});",
											"",
											"pm.test(\"save code in variable\", function () {",
											"    var jsonData = pm.response.json();",
											"    var index=_.random(0, (jsonData.items.length-1))",
											"    var codeValue=jsonData.items[index].code;",
											"",
											"    pm.globals.set(\"equipmentCode\", codeValue);",
											"    ",
											"}); ",
											"",
											"",
											"",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "9a62a34e-61ff-406d-9d7e-faf9b08c41b9",
										"exec": [
											"pm.globals.set(\"pageNumberE\", \"1\");",
											"pm.globals.set(\"pageSizeE\", \"1000\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "Fiix-Tenant-Id",
										"type": "text",
										"value": "20"
									}
								],
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageNumber={{pageNumberE}}&pageSize={{pageSizeE}}",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									],
									"query": [
										{
											"key": "pageNumber",
											"value": "{{pageNumberE}}"
										},
										{
											"key": "pageSize",
											"value": "{{pageSizeE}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Correct post with exiting code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1f031e8e-24a8-4fa9-b3e5-b7b375e9e98e",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Error message : code must be unique\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"code must be unique\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"march 1- EquipmentWithAccount\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"note: testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n  \"accountId\": {{accountId}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						},
						{
							"name": "create post with unique code",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f31a3774-bfb2-49fd-8240-bec909ee7d0a",
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"pm.test(\"Status is : created\", function() {",
											"    pm.response.to.have.status(\"Created\");",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7b86e63c-eb2e-417c-9681-8d2a4e7b0663",
										"exec": [
											"const dateNow= new Date();",
											"let stringDate= dateNow.toISOString();",
											"let concatString = pm.globals.get(\"equipmentCode\")+stringDate;",
											"pm.globals.set(\"equipmentCode\", concatString);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"march 1- EquipmentWithAccount\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"note: testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n  \"accountId\": {{accountId}}\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Obsolute",
					"item": [
						{
							"name": "create post with unique code simple (static)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f31a3774-bfb2-49fd-8240-bec909ee7d0a",
										"exec": [
											"pm.test(\"Status code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											"pm.test(\"Status code name has string : error message\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"Bad Request\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "7b86e63c-eb2e-417c-9681-8d2a4e7b0663",
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"wendyTest\",\n  \"code\": \"wendyCode\",\n  \"description\": \"note: testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-29\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
									"protocol": "https",
									"host": [
										"equipment-mgmt-service",
										"fiixcmms-ball",
										"com"
									],
									"path": [
										"equipments"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Trim space",
			"item": [
				{
					"name": "script to find and set category name (dynamic) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Status is OK\", function() {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"pm.test(\"save values in global variable\", function () {",
									"    var jsonData = pm.response.json();",
									"    var index=_.random(0, (jsonData.items.length-1));",
									"     var nameValue=jsonData.items[index].name;",
									"    var codeValue=jsonData.items[index].code;",
									"    pm.globals.set(\"nameEquipment\", nameValue);",
									"     pm.globals.set(\"equipmentCode\", codeValue);",
									"    ",
									"}); ",
									"",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
								"exec": [
									"pm.globals.set(\"pageNumberE\", \"1\");",
									"pm.globals.set(\"pageSizeE\", \"1000\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "{{pageSizeE}}"
								},
								{
									"key": "pageNumber",
									"value": "{{pageNumberE}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1st unique post request with space in front",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc1489fd-9b8e-4dcb-9aca-16ad3a1d338f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code name has string : Created\", function() {",
									"    pm.response.to.have.status(\"Created\");",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dcfa7928-39f8-47e1-9f3f-4fd513800d5a",
								"exec": [
									"const dateNow= new Date();",
									"let stringDate= dateNow.toISOString();",
									"",
									"",
									"let concatStringCode ='\\xa0\\xa0\\xa0'+pm.globals.get(\"equipmentCode\")+stringDate;",
									"//let concatStringCode ='\\x20\\x20\\x20'+pm.globals.get(\"equipmentCode\")+stringDate;",
									"pm.globals.set(\"equipmentCode\", concatStringCode);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"{{nameEquipment}}\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"   note: POL-160 testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"   acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"    acc_ford\",\n  \"serialNumber\": \"    1234\",\n  \"model\": \"    acc_focus\",\n  \"notes\": \"   1st postman test for POL-1\",\n  \"accountId\": {{accountId}},\n  \"chargeDepartmentId\":{{chargedeptID}},\n  \"categoryId\":\"{{categoryId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "search equipment list with code (with space)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Status is string : OK\", function() {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"pm.test(\"triming worked\", function () {",
									"    var jsonData = pm.response.json();",
									"    var totalRecord=jsonData.totalElements;",
									"    var name=jsonData.items[0].name;",
									"    var indexOfSpace=name.indexOf(\"^\\s\");",
									"    ",
									"    pm.expect(totalRecord).to.eq(1);",
									"    pm.expect(indexOfSpace).to.equal(-1);",
									"    pm.globals.set(\"NoOfEquipmentFound\", totalRecord);",
									"}); ",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Fiix-Tenant-Id",
								"type": "text",
								"value": "20"
							}
						],
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{equipmentCode}}",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "{{pageSizeE}}"
								},
								{
									"key": "pageNumber",
									"value": "{{pageNumberE}}"
								},
								{
									"key": "q",
									"value": "{{equipmentCode}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2nd duplicate  post request without space in front",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc1489fd-9b8e-4dcb-9aca-16ad3a1d338f",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string : error message\", function() {",
									"    pm.expect(pm.response.text()).to.include(\"must be unique\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a70f5784-022f-4bce-aa46-ebfe64630283",
								"exec": [
									"let concatString = pm.globals.get(\"equipmentCode\").trim();",
									"pm.globals.set(\"equipmentCode\", concatString);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n    \"name\": \"{{nameEquipment}}\",\n  \"code\": \"{{equipmentCode}}\",\n  \"description\": \"   note: POL-160 testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"   acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"   acc_ford\",\n  \"serialNumber\": \"   1234\",\n  \"model\": \"   acc_focus\",\n  \"notes\": \"   1st postman test for POL-1\",\n  \"accountId\": {{accountId}},\n  \"chargeDepartmentId\":{{chargedeptID}},\n  \"categoryId\":\"{{categoryId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "2nd get equipment list status check single codee",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Status is OK\", function() {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"pm.test(\"total no. of search result has not increased since last post\", function () {",
									"    var jsonData = pm.response.json();",
									"    var totalRecord=jsonData.items.length;",
									"    pm.expect(totalRecord).to.eq(pm.globals.get(\"NoOfCategoryFound\"));",
									"}); ",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
								"exec": [
									"pm.globals.set(\"pageNumberE\", \"1\");",
									"pm.globals.set(\"pageSizeE\", \"1000\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Fiix-Tenant-Id",
								"value": "20",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?pageSize={{pageSizeE}}&pageNumber={{pageNumberE}}&q={{equipmentCode}}",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "{{pageSizeE}}"
								},
								{
									"key": "pageNumber",
									"value": "{{pageNumberE}}"
								},
								{
									"key": "q",
									"value": "{{equipmentCode}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "1st unique post request with space in back (static)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc1489fd-9b8e-4dcb-9aca-16ad3a1d338f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code name has string : Created\", function() {",
									"    pm.response.to.have.status(\"Created\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"nameEquipBack   \",\n  \"code\": \"codeNameEquipBack2   \",\n  \"description\": \"note: POL-160 testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n  \"accountId\": {{accountId}},\n  \"chargeDepartmentId\":{{chargedeptID}},\n  \"categoryId\":\"{{categoryId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "2nd duplicate  post request without space in back (static)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc1489fd-9b8e-4dcb-9aca-16ad3a1d338f",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code name has string : error message\", function() {",
									"    pm.expect(pm.response.text()).to.include(\"must be unique\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"nameEquipBack\",\n  \"code\": \"codeNameEquipBack3\",\n  \"description\": \"   note: POL-160 testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"   acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"   acc_ford\",\n  \"serialNumber\": \"   1234\",\n  \"model\": \"   acc_focus\",\n  \"notes\": \"   1st postman test for POL-1\",\n  \"accountId\": {{accountId}},\n  \"chargeDepartmentId\":{{chargedeptID}},\n  \"categoryId\":\"{{categoryId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "1st unique post request with space in middle (static)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc1489fd-9b8e-4dcb-9aca-16ad3a1d338f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code name has string : Created\", function() {",
									"    pm.response.to.have.status(\"Created\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"nameEquipBack  ABC\",\n  \"code\": \"codeNameEquipBack3 ABC\",\n  \"description\": \"note: POL-160 testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n  \"accountId\": {{accountId}},\n  \"chargeDepartmentId\":{{chargedeptID}},\n  \"categoryId\":\"{{categoryId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "2nd unique post request with more space in middle (static)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "cc1489fd-9b8e-4dcb-9aca-16ad3a1d338f",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code name has string : Created\", function() {",
									"    pm.response.to.have.status(\"Created\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"tenantId\": \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n  \"name\": \"nameEquipBack   ABC\",\n  \"code\": \"codeNameEquipBack3   ABC\",\n  \"description\": \"note: POL-160 testing post from postman\",\n  \"criticality\": 7,\n  \"barcode\": \"acc1234\",\n  \"unspscCode\": 123,\n  \"availability\": true,\n  \"make\": \"acc_ford\",\n  \"serialNumber\": \"1234\",\n  \"model\": \"acc_focus\",\n  \"notes\": \"1st postman test for POL-1\",\n  \"accountId\": {{accountId}},\n  \"chargeDepartmentId\":{{chargedeptID}},\n  \"categoryId\":\"{{categoryId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							]
						}
					},
					"response": []
				},
				{
					"name": "get equipment list with code ( with space) (static)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88a272e9-c888-415c-88da-2dbf69c2994f",
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Status is : OK\", function() {",
									"    pm.response.to.have.status(\"OK\");",
									"});",
									"",
									"pm.test(\"total no. of search result has not increased since last post\", function () {",
									"    var jsonData = pm.response.json();",
									"    var totalRecord=jsonData.items.length;",
									"    pm.expect(totalRecord).to.eq(1);",
									"}); ",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "01825cab-9ba9-41d1-ac2e-0fbae1b7d28d",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json",
								"disabled": true
							},
							{
								"key": "Fiix-Tenant-Id",
								"type": "text",
								"value": "20"
							}
						],
						"url": {
							"raw": "https://equipment-mgmt-service.fiixcmms-ball.com/equipments?{{pageSize}}&code=   codeNameEquipBack3",
							"protocol": "https",
							"host": [
								"equipment-mgmt-service",
								"fiixcmms-ball",
								"com"
							],
							"path": [
								"equipments"
							],
							"query": [
								{
									"key": "{{pageSize}}",
									"value": null
								},
								{
									"key": "code",
									"value": "   codeNameEquipBack3"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6a0c6de7-6f41-4a9f-893a-cc395653fb08",
				"type": "text/javascript",
				"exec": [
					"pm.request.headers.add({key:'Fiix-Tenant-Id',value:'20'})"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "207242d3-6008-4b86-8648-acba9a9290b2",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}